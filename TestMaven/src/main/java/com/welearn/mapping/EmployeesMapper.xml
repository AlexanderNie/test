<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.welearn.dao.EmployeesMapper">
  <resultMap id="BaseResultMap" type="com.welearn.domain.Employees">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="dob" jdbcType="DATE" property="dob" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
  </resultMap>
  <sql id="Base_Column_List">
    emp_id, emp_name, dob, salary, dept_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employees
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  
  <select id="getEmpsByNameLike"  parameterType="java.lang.String" resultType="com.welearn.domain.Employees">
        select 
        <include refid="Base_Column_List" />
         from employees where emp_name like concat('%',#{name},'%')  
    </select>
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employees
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.welearn.domain.Employees">
    insert into employees (emp_id, emp_name, dob, 
      salary, dept_id)
    values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{dob,jdbcType=DATE}, 
      #{salary,jdbcType=DOUBLE}, #{deptId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.welearn.domain.Employees">
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="dob != null">
        dob,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="dob != null">
        #{dob,jdbcType=DATE},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.welearn.domain.Employees">
    update employees
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="dob != null">
        dob = #{dob,jdbcType=DATE},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.welearn.domain.Employees">
    update employees
    set emp_name = #{empName,jdbcType=VARCHAR},
      dob = #{dob,jdbcType=DATE},
      salary = #{salary,jdbcType=DOUBLE},
      dept_id = #{deptId,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
</mapper>